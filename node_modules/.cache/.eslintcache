[{"/home/abdullah-faiz/mobilemvp-front/src/index.tsx":"1","/home/abdullah-faiz/mobilemvp-front/src/App.tsx":"2","/home/abdullah-faiz/mobilemvp-front/src/components/Generate.tsx":"3","/home/abdullah-faiz/mobilemvp-front/src/components/Survey.tsx":"4","/home/abdullah-faiz/mobilemvp-front/src/hooks/useStickyState.js":"5","/home/abdullah-faiz/mobilemvp-front/src/components/SurveyHeader.tsx":"6","/home/abdullah-faiz/mobilemvp-front/src/components/SurveyData.tsx":"7","/home/abdullah-faiz/mobilemvp-front/src/components/Successful.tsx":"8","/home/abdullah-faiz/mobilemvp-front/src/components/Sidebar/SurveySidebar.tsx":"9","/home/abdullah-faiz/mobilemvp-front/src/components/Modal/AlertModal.tsx":"10","/home/abdullah-faiz/mobilemvp-front/src/components/Modal/InfoModal.tsx":"11","/home/abdullah-faiz/mobilemvp-front/src/components/Sidebar/SidebarHeader.tsx":"12","/home/abdullah-faiz/mobilemvp-front/src/components/Sidebar/SidebarData.tsx":"13","/home/abdullah-faiz/mobilemvp-front/src/constants.tsx":"14","/home/abdullah-faiz/mobilemvp-front/src/components/Sidebar/SidebarTotal.tsx":"15"},{"size":196,"mtime":1644582217194,"results":"16","hashOfConfig":"17"},{"size":859,"mtime":1644582217186,"results":"18","hashOfConfig":"17"},{"size":467,"mtime":1644582217194,"results":"19","hashOfConfig":"17"},{"size":18647,"mtime":1644582217194,"results":"20","hashOfConfig":"17"},{"size":463,"mtime":1644582217194,"results":"21","hashOfConfig":"17"},{"size":1319,"mtime":1644582217194,"results":"22","hashOfConfig":"17"},{"size":5691,"mtime":1644582217194,"results":"23","hashOfConfig":"17"},{"size":404,"mtime":1644582217194,"results":"24","hashOfConfig":"17"},{"size":2857,"mtime":1644582217194,"results":"25","hashOfConfig":"17"},{"size":2850,"mtime":1644582217194,"results":"26","hashOfConfig":"17"},{"size":6332,"mtime":1644582217194,"results":"27","hashOfConfig":"17"},{"size":1830,"mtime":1644582217194,"results":"28","hashOfConfig":"17"},{"size":4990,"mtime":1644582217194,"results":"29","hashOfConfig":"17"},{"size":337,"mtime":1644582217194,"results":"30","hashOfConfig":"17"},{"size":1313,"mtime":1644582217194,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1d933im",{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/abdullah-faiz/mobilemvp-front/src/index.tsx",[],"/home/abdullah-faiz/mobilemvp-front/src/App.tsx",[],"/home/abdullah-faiz/mobilemvp-front/src/components/Generate.tsx",[],"/home/abdullah-faiz/mobilemvp-front/src/components/Survey.tsx",["63"],"import React, { useEffect, useState } from \"react\";\r\nimport SurveyHeader from \"./SurveyHeader\";\r\nimport { Spinner } from \"react-bootstrap\";\r\nimport SurveyData from \"./SurveyData\";\r\nimport SurveySidebar from \"./Sidebar/SurveySidebar\";\r\nimport AlertModal from \"./Modal/AlertModal\";\r\nimport InfoModal from \"./Modal/InfoModal\";\r\nimport Successful from \"../components/Successful\";\r\nimport { useLocation } from \"react-router\";\r\nimport { MarketOptiontype, MarketType } from \"../types\";\r\nimport { Howl, Howler } from \"howler\";\r\nimport toast from \"react-hot-toast\";\r\nimport axios from \"axios\";\r\nimport AlertSound from \"../assets/sounds/Alert.mp3\";\r\nimport useStickyState from \"../hooks/useStickyState\";\r\n\r\nconst Survey = () => {\r\n  const params = new URLSearchParams(useLocation().search);\r\n  const RID = params.get(\"RID\");\r\n\r\n  const [localSurveyData, setLocalSurveyData] = useStickyState(\r\n    [],\r\n    `survey_data${RID}`\r\n  );\r\n  const [localCartData] = useStickyState([], `cart_data${RID}`);\r\n  const [localThankYouPage, setLocalThankYouPage] = useStickyState(\r\n    false,\r\n    `thank_you_page${RID}`\r\n  );\r\n  const [localDefaultData] = useStickyState([], `default_data${RID}`);\r\n  const [, setLocalTimer] = useStickyState(0, `timer${RID}`);\r\n  const [localTimerCount, setLocalTimerCount] = useStickyState(\r\n    0,\r\n    `timer_count${RID}`\r\n  );\r\n  const [fetchedData, setFetchedData] = useState<any>([]);\r\n  const [, setDefaultData] = useState<MarketType[] | []>(localDefaultData);\r\n  const [surveyData, setSurveyData] = useState<MarketType[] | []>(\r\n    localSurveyData\r\n  );\r\n  const [cartData, setCartData] = useState<MarketType[] | []>(localCartData);\r\n  const [timer, setTimer] = useState<number>(0);\r\n  const [showThankyouPage, setShowThankyouPage] =\r\n    useState<boolean>(localThankYouPage);\r\n  const [toggleSidebar, setToggleSidebar] = useState<boolean>(false);\r\n  const [showWarning, setShowWarning] = useState<boolean>(false);\r\n  const [showInfoPopup, setShowInfoPopup] = useState<boolean>(false);\r\n  const [showTimerAlert, setShowTimerAlert] = useState<boolean>(false);\r\n  const [infoID, setInfoID] = useState<number>(0);\r\n  const [, setStartTime] = useState<any>();\r\n  const [, setEndTime] = useState<any>();\r\n  const [buttonLoading, setButtonLoading] = useState<boolean>(false);\r\n\r\n  sessionStorage.setItem(`userId${RID}`, RID!);\r\n\r\n  useEffect(() => {\r\n    showTimerPopUp();\r\n\r\n    if (localSurveyData.length === 0) {\r\n      let formData = new FormData();\r\n      formData.append(\"rid\", RID!);\r\n      fetch(process.env.REACT_APP_START_SURVEY_API!, {\r\n        method: \"post\",\r\n        body: formData,\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          sessionStorage.setItem(\r\n            `endtime${RID}`,\r\n            JSON.stringify(\r\n              new Date(data.body[0].time_started).setTime(\r\n                new Date(data.body[0].time_started).getTime() + 600000\r\n              )\r\n            )\r\n          );\r\n          setFetchedData(data);\r\n          setStartTime(new Date(data.body[0].time_started).getTime());\r\n          setEndTime(\r\n            new Date(data.body[0].time_started).setTime(\r\n              new Date(data.body[0].time_started).getTime() + 600000\r\n            )\r\n          );\r\n        })\r\n        .catch((err) => toast.error(err?.message));\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (fetchedData.length === 0) {\r\n    } else if (fetchedData.message === \"rid is already used\") {\r\n      const lsd = sessionStorage.getItem(`survey_data${RID}`);\r\n      lsd !== null && setSurveyData(JSON.parse(localSurveyData));\r\n    } else {\r\n      let fetched_data = [\r\n        {\r\n          id: fetchedData.body[0].market1[0].id,\r\n          question: \"Which Kodiak product will sell the most?\",\r\n          subtotal: 0,\r\n          options: [\r\n            {\r\n              id: fetchedData.body[0].market1[0].option1.id,\r\n              name: \"Bacon, Egg and Cheese Biscuit Protein Breakfast Sandwich\",\r\n              price: fetchedData.body[0].market1[0].option1.price_1\r\n                ? fetchedData.body[0].market1[0].option1.price_1\r\n                : 0.0,\r\n              quantity: fetchedData.body[0].market1[0].option1.bet_1,\r\n              total: fetchedData.body[0].market1[0].option1.money_bet_1,\r\n            },\r\n            {\r\n              id: fetchedData.body[0].market1[0].option2.id,\r\n              name: \"Kids Chocolate Blueberry Power Waffle\",\r\n              price: fetchedData.body[0].market1[0].option2.price_2\r\n                ? fetchedData.body[0].market1[0].option2.price_2\r\n                : 0.0,\r\n              quantity: fetchedData.body[0].market1[0].option2.bet_2,\r\n              total: fetchedData.body[0].market1[0].option2.money_bet_2,\r\n            },\r\n            {\r\n              id: fetchedData.body[0].market1[0].option3.id,\r\n              name: \"High Protein Multi-Purpose Cake Flour\",\r\n              price: fetchedData.body[0].market1[0].option3.price_3\r\n                ? fetchedData.body[0].market1[0].option3.price_3\r\n                : 0.0,\r\n              quantity: fetchedData.body[0].market1[0].option3.bet_3,\r\n              total: fetchedData.body[0].market1[0].option3.money_bet_3,\r\n            },\r\n            {\r\n              id: fetchedData.body[0].market1[0].option4.id,\r\n              name: \"Protein Power To-Go Bars\",\r\n              price: fetchedData.body[0].market1[0].option4.price_4\r\n                ? fetchedData.body[0].market1[0].option4.price_4\r\n                : 0.0,\r\n              quantity: fetchedData.body[0].market1[0].option4.bet_4,\r\n              total: fetchedData.body[0].market1[0].option4.money_bet_4,\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: fetchedData.body[0].market2[0].id,\r\n          question: \"Who will be the host of Jeopardy! for the next season?\",\r\n          subtotal: 0,\r\n          options: [\r\n            {\r\n              id: fetchedData.body[0].market2[0].option1.id,\r\n              name: \"Ken Jennings\",\r\n              price: fetchedData.body[0].market2[0].option1.price_1\r\n                ? fetchedData.body[0].market2[0].option1.price_1\r\n                : 0.0,\r\n              quantity: fetchedData.body[0].market2[0].option1.bet_1,\r\n              total: fetchedData.body[0].market2[0].option1.money_bet_1,\r\n            },\r\n            {\r\n              id: fetchedData.body[0].market2[0].option2.id,\r\n              name: \"LaVar Burton\",\r\n              price: fetchedData.body[0].market2[0].option2.price_2\r\n                ? fetchedData.body[0].market2[0].option2.price_2\r\n                : 0.0,\r\n              quantity: fetchedData.body[0].market2[0].option2.bet_2,\r\n              total: fetchedData.body[0].market2[0].option2.money_bet_2,\r\n            },\r\n            {\r\n              id: fetchedData.body[0].market2[0].option3.id,\r\n              name: \"Aaron Rodgers\",\r\n              price: fetchedData.body[0].market2[0].option3.price_3\r\n                ? fetchedData.body[0].market2[0].option3.price_3\r\n                : 0.0,\r\n              quantity: fetchedData.body[0].market2[0].option3.bet_3,\r\n              total: fetchedData.body[0].market2[0].option3.money_bet_3,\r\n            },\r\n            {\r\n              id: fetchedData.body[0].market2[0].option4.id,\r\n              name: \"Somebody else\",\r\n              price: fetchedData.body[0].market2[0].option4.price_4\r\n                ? fetchedData.body[0].market2[0].option4.price_4\r\n                : 0.0,\r\n              quantity: fetchedData.body[0].market2[0].option4.bet_4,\r\n              total: fetchedData.body[0].market2[0].option4.money_bet_4,\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: fetchedData.body[0].market3[0].id,\r\n          question: \"How many games will BYU’s football team win?\",\r\n          subtotal: 0,\r\n          options: [\r\n            {\r\n              id: fetchedData.body[0].market3[0].option1.id,\r\n              name: \"6 or fewer\",\r\n              price: fetchedData.body[0].market3[0].option1.price_1\r\n                ? fetchedData.body[0].market3[0].option1.price_1\r\n                : 0.0,\r\n              quantity: fetchedData.body[0].market3[0].option1.bet_1,\r\n              total: fetchedData.body[0].market3[0].option1.money_bet_1,\r\n            },\r\n            {\r\n              id: fetchedData.body[0].market3[0].option2.id,\r\n              name: \"7\",\r\n              price: fetchedData.body[0].market3[0].option2.price_2\r\n                ? fetchedData.body[0].market3[0].option2.price_2\r\n                : 0.0,\r\n              quantity: fetchedData.body[0].market3[0].option2.bet_2,\r\n              total: fetchedData.body[0].market3[0].option2.money_bet_2,\r\n            },\r\n            {\r\n              id: fetchedData.body[0].market3[0].option3.id,\r\n              name: \"8\",\r\n              price: fetchedData.body[0].market3[0].option3.price_3\r\n                ? fetchedData.body[0].market3[0].option3.price_3\r\n                : 0.0,\r\n              quantity: fetchedData.body[0].market3[0].option3.bet_3,\r\n              total: fetchedData.body[0].market3[0].option3.money_bet_3,\r\n            },\r\n            {\r\n              id: fetchedData.body[0].market3[0].option4.id,\r\n              name: \"9 or more\",\r\n              price: fetchedData.body[0].market3[0].option4.price_4\r\n                ? fetchedData.body[0].market3[0].option4.price_4\r\n                : 0.0,\r\n              quantity: fetchedData.body[0].market3[0].option4.bet_4,\r\n              total: fetchedData.body[0].market3[0].option4.money_bet_4,\r\n            },\r\n          ],\r\n        },\r\n        {\r\n          id: fetchedData.body[0].market4[0].id,\r\n          question:\r\n            \"Will upcoming James Bond film “No Time To Die” be “Certified Fresh” by Rotten Tomatoes?\",\r\n          subtotal: 0,\r\n          options: [\r\n            {\r\n              id: fetchedData.body[0].market4[0].option1.id,\r\n              name: \"Yes\",\r\n              price: fetchedData.body[0].market4[0].option1.price_1\r\n                ? fetchedData.body[0].market4[0].option1.price_1\r\n                : 0.0,\r\n              quantity: fetchedData.body[0].market4[0].option1.bet_1,\r\n              total: fetchedData.body[0].market4[0].option1.money_bet_1,\r\n            },\r\n            {\r\n              id: fetchedData.body[0].market4[0].option2.id,\r\n              name: \"No\",\r\n              price: fetchedData.body[0].market4[0].option2.price_2\r\n                ? fetchedData.body[0].market4[0].option2.price_2\r\n                : 0.0,\r\n              quantity: fetchedData.body[0].market4[0].option2.bet_2,\r\n              total: fetchedData.body[0].market4[0].option2.money_bet_2,\r\n            },\r\n          ],\r\n        },\r\n      ];\r\n\r\n      const shuffle = () => {\r\n        return fetched_data.sort(() => Math.random() - 0.5);\r\n      };\r\n\r\n      const shuffled_fetched_data = shuffle();\r\n\r\n      setDefaultData(shuffled_fetched_data);\r\n      setSurveyData(shuffled_fetched_data);\r\n\r\n      if (shuffled_fetched_data.length > 0) {\r\n        sessionStorage.setItem(\r\n          `default_data${RID}`,\r\n          JSON.stringify(shuffled_fetched_data)\r\n        );\r\n      }\r\n      setLocalSurveyData(JSON.stringify(shuffled_fetched_data));\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [fetchedData, setFetchedData]);\r\n\r\n  sessionStorage.setItem(`survey_data${RID}`, JSON.stringify(surveyData));\r\n  sessionStorage.setItem(`userId${RID}`, JSON.stringify(RID));\r\n  sessionStorage.setItem(`cart_data${RID}`, JSON.stringify(cartData));\r\n\r\n  let totalPurchase;\r\n  let totalShares;\r\n\r\n  const playNotification = () => {\r\n    Howler.volume(1.0);\r\n    const sound = new Howl({\r\n      src: [AlertSound],\r\n      autoplay: true,\r\n    });\r\n    sound.play();\r\n  };\r\n\r\n  const submitData = () => {\r\n    setToggleSidebar(true);\r\n    const l_cart_data = sessionStorage.getItem(`cart_data${RID}`);\r\n\r\n    if (l_cart_data !== null && JSON.parse(l_cart_data).length !== 0) {\r\n      const parse_l_cart_data = JSON.parse(l_cart_data);\r\n      let convertedData = {};\r\n      const marketIDs = parse_l_cart_data.map((market: any) => market.id);\r\n      let marketData = [];\r\n\r\n      for (let d in marketIDs) {\r\n        let oneMarketData = surveyData?.find((obj) => obj.id === marketIDs[d]);\r\n        marketData.push(oneMarketData);\r\n      }\r\n\r\n      let marketDataOptions = marketData.map((market: any) => market?.options);\r\n\r\n      for (let d in marketData) {\r\n        const optId = marketDataOptions[d].map((m: any) => m.id);\r\n        const optBet = marketDataOptions[d].map((m: any) => m.quantity);\r\n        const optPrice = marketDataOptions[d].map((m: any) => m.price);\r\n        let opts: any = [];\r\n        for (let i in optId) {\r\n          opts = [\r\n            ...opts,\r\n            {\r\n              id: optId[i],\r\n              bet: optBet[i],\r\n              price: optPrice[i],\r\n            },\r\n          ];\r\n        }\r\n        let marketName = `market${parseInt(d) + 1}`;\r\n        convertedData = {\r\n          ...convertedData,\r\n          [marketName]: {\r\n            id: marketIDs[d],\r\n            options: opts,\r\n          },\r\n        };\r\n      }\r\n\r\n      convertedData = {\r\n        ...convertedData,\r\n        rid: RID,\r\n      };\r\n\r\n      axios\r\n        .post(\r\n          process.env.REACT_APP_END_SURVEY_API!,\r\n          JSON.stringify(convertedData),\r\n          {\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n          }\r\n        )\r\n        .then((res: any) => {\r\n          if (res?.data?.message === \"success\") {\r\n            setShowThankyouPage(true);\r\n            setLocalThankYouPage(true);\r\n          } else {\r\n            toast.error(res?.data?.message);\r\n          }\r\n          setButtonLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          toast.error(err?.message);\r\n          setButtonLoading(false);\r\n        });\r\n    }\r\n  };\r\n\r\n  const showTimerPopUp = () => {\r\n    if (surveyData) {\r\n      const timeLimit = 480;\r\n\r\n      let i;\r\n      let count = localTimerCount;\r\n      const timer = setInterval(() => {\r\n        const localEndTime = sessionStorage.getItem(`endtime${RID}`);\r\n        const getLocalEndTime =\r\n          localEndTime !== null && JSON.parse(localEndTime);\r\n        const localThankYou = sessionStorage.getItem(`thank_you_page${RID}`);\r\n        i = parseInt(\r\n          (600 - (getLocalEndTime - new Date().getTime()) / 1000).toString()\r\n        );\r\n        if (\r\n          i === timeLimit &&\r\n          count === 0 &&\r\n          localThankYou !== null &&\r\n          !JSON.parse(localThankYou)\r\n        ) {\r\n          count++;\r\n          setLocalTimerCount(count);\r\n          setShowTimerAlert(true);\r\n          setShowWarning(true);\r\n          playNotification();\r\n        }\r\n        setTimer(i);\r\n        setLocalTimer(JSON.stringify(i));\r\n      }, 1000);\r\n    }\r\n  };\r\n\r\n  const showBalancePopup = () => {\r\n    setShowTimerAlert(false);\r\n    setShowWarning(true);\r\n    playNotification();\r\n  };\r\n\r\n  if (cartData) {\r\n    const optionsData = cartData.map((market) => market.options);\r\n    optionsData.map((option) => option);\r\n    const onlyOpt: MarketOptiontype[] = Array.prototype.concat.apply(\r\n      [],\r\n      optionsData.map((option) => option)\r\n    );\r\n    const subtotalArr = onlyOpt.map((opt) => opt.total);\r\n    const totalSharesArr = onlyOpt.map((opt) => opt.quantity);\r\n\r\n    totalPurchase = parseFloat(\r\n      subtotalArr.reduce((p, c) => p + c, 0).toFixed(2)\r\n    );\r\n    totalShares = totalSharesArr.reduce((p, c) => p + c, 0);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!localThankYouPage && (\r\n        <div\r\n          className=\"app_background_overlay\"\r\n          onClick={() => setToggleSidebar(false)}\r\n          style={{ display: toggleSidebar ? \"block\" : \"none\", zIndex: 9 }}\r\n        />\r\n      )}\r\n      <div className=\"survey\">\r\n        {surveyData.length !== 0 ? (\r\n          <>\r\n            <AlertModal\r\n              showWarning={showWarning}\r\n              setShowWarning={setShowWarning}\r\n              type={showTimerAlert ? \"time\" : \"balance\"}\r\n              timer={timer}\r\n              toggleSidebar={toggleSidebar}\r\n              setToggleSidebar={setToggleSidebar}\r\n            />\r\n            <InfoModal\r\n              showInfoPopup={showInfoPopup}\r\n              setShowInfoPopup={setShowInfoPopup}\r\n              surveyData={surveyData}\r\n              infoID={infoID}\r\n            />\r\n            {!showThankyouPage ? (\r\n              <>\r\n                <SurveySidebar\r\n                  totalShares={totalShares}\r\n                  totalPurchase={totalPurchase}\r\n                  surveyData={surveyData}\r\n                  setSurveyData={setSurveyData}\r\n                  cartData={cartData}\r\n                  setCartData={setCartData}\r\n                  toggleSidebar={toggleSidebar}\r\n                  setToggleSidebar={setToggleSidebar}\r\n                  setShowThankyouPage={setShowThankyouPage}\r\n                  submitData={submitData}\r\n                  timer={timer}\r\n                  setButtonLoading={setButtonLoading}\r\n                  buttonLoading={buttonLoading}\r\n                />\r\n                <SurveyHeader\r\n                  totalPurchase={totalPurchase}\r\n                  toggleSidebar={toggleSidebar}\r\n                  setToggleSidebar={setToggleSidebar}\r\n                  timer={timer}\r\n                />\r\n                <p\r\n                  className=\"text-center font-italic my-2\"\r\n                  style={{ color: \"#727272\" }}\r\n                >\r\n                  <em>Tap an option to purchase a share</em>\r\n                </p>\r\n                <SurveyData\r\n                  showBalancePopup={showBalancePopup}\r\n                  totalPurchase={totalPurchase}\r\n                  surveyData={surveyData}\r\n                  setSurveyData={setSurveyData}\r\n                  cartData={cartData}\r\n                  setCartData={setCartData}\r\n                  showInfoPopup={showInfoPopup}\r\n                  setShowInfoPopup={setShowInfoPopup}\r\n                  setInfoID={setInfoID}\r\n                  infoID={infoID}\r\n                />\r\n              </>\r\n            ) : (\r\n              <div\r\n                className=\"d-flex justify-content-center align-items-center w-100\"\r\n                style={{ height: \"100vh\" }}\r\n              >\r\n                <Successful />\r\n              </div>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <div\r\n            className=\"d-flex justify-content-center align-items-center w-100\"\r\n            style={{ height: \"100vh\" }}\r\n          >\r\n            <Spinner animation=\"border\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Survey;\r\n","/home/abdullah-faiz/mobilemvp-front/src/hooks/useStickyState.js",[],"/home/abdullah-faiz/mobilemvp-front/src/components/SurveyHeader.tsx",[],"/home/abdullah-faiz/mobilemvp-front/src/components/SurveyData.tsx",[],"/home/abdullah-faiz/mobilemvp-front/src/components/Successful.tsx",[],"/home/abdullah-faiz/mobilemvp-front/src/components/Sidebar/SurveySidebar.tsx",[],"/home/abdullah-faiz/mobilemvp-front/src/components/Modal/AlertModal.tsx",[],"/home/abdullah-faiz/mobilemvp-front/src/components/Modal/InfoModal.tsx",[],"/home/abdullah-faiz/mobilemvp-front/src/components/Sidebar/SidebarHeader.tsx",[],"/home/abdullah-faiz/mobilemvp-front/src/components/Sidebar/SidebarData.tsx",[],"/home/abdullah-faiz/mobilemvp-front/src/constants.tsx",[],"/home/abdullah-faiz/mobilemvp-front/src/components/Sidebar/SidebarTotal.tsx",[],{"ruleId":"64","severity":1,"message":"65","line":366,"column":13,"nodeType":"66","messageId":"67","endLine":366,"endColumn":18},"@typescript-eslint/no-unused-vars","'timer' is assigned a value but never used.","Identifier","unusedVar"]